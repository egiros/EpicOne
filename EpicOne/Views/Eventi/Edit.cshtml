@model EpicOne.Models.Eventi

@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm("Edit", "Eventi", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h2 class="mb-5 fw-bold" style="margin-top:100px" ;>Modifica Evento</h2>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EventoID)

    <div class="form-group">
        @Html.LabelFor(model => model.Titolo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Titolo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Titolo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descrizione, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descrizione, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descrizione, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataOra, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataOra, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
            @Html.ValidationMessageFor(model => model.DataOra, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LuogoID, "LuogoID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("LuogoID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LuogoID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CategoriaID, "CategoriaID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CategoriaID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CategoriaID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OrganizzatoreID, "OrganizzatoreID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("OrganizzatoreID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.OrganizzatoreID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PrezzoBase, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PrezzoBase, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PrezzoBase, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.QuantitàTotaleBiglietti, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.QuantitàTotaleBiglietti, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QuantitàTotaleBiglietti, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BigliettiRimanenti, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BigliettiRimanenti, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BigliettiRimanenti, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group mb-3">
        <h6>@Html.Label("File", new { @class = "form-label fw-bold" }) - Carica nuova immagine</h6>
        <input type="file" name="File" class="form-control" />
    </div>

    @if (!string.IsNullOrEmpty(Model.Immagine))
    {
        <div class="form-group mb-4">
            <label>Immagine attuale: </label>
            <img src="@Model.Immagine" alt="Immagine attuale" class="ms-3" width="100" />
        </div>
    }


    @*<div class="form-group">
            @Html.LabelFor(model => model.Immagine, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="file" />
                @Html.ValidationMessageFor(model => model.Immagine, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salva Modifiche" class="btn btn-success" /> |
                @Html.ActionLink("Indietro", "Index", "", new { @class = "btn btn-outline-warning" })
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
